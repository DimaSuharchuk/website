<?php

/**
 * @file
 * Main file for installation on update hooks.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Config\InstallStorage;

/**
 * Implements hook_uninstall()
 */
function druki_content_uninstall() {
  // Remove state settings.
  Drupal::state()->delete('druki_content.settings.force_update');
}

/**
 * Move two base entity fields to configuration fields.
 */
function druki_content_update_8601(&$sandbox) {
  // If you are looking at this hook update for learning purposes, don't forget,
  // you also must remove base field definition from the entity object codebase,
  // before executing this hook.
  $module_handler = Drupal::moduleHandler();
  $druki_content_module = $module_handler->getModule('druki_content');
  $config_install_path = $druki_content_module->getPath() . '/' . InstallStorage::CONFIG_INSTALL_DIRECTORY;
  $definition_update_manager = Drupal::entityDefinitionUpdateManager();
  $entity_type_manager = Drupal::entityTypeManager();
  // Load config folder.
  $storage = new FileStorage($config_install_path);

  $forced_path_field = $definition_update_manager
    ->getFieldStorageDefinition('forced_path', 'druki_content');
  if ($forced_path_field) {
    // Uninstall "forced_path" base field.
    $definition_update_manager->uninstallFieldStorageDefinition($forced_path_field);

    // Install "forced_path" field.
    // Install storage.
    $entity_type_manager
      ->getStorage('field_storage_config')
      ->create($storage->read('field.storage.druki_content.forced_path'))
      ->save();
    // Install field.
    $entity_type_manager
      ->getStorage('field_config')
      ->create($storage->read('field.field.druki_content.druki_content.forced_path'))
      ->save();
  }

  $category_field = $definition_update_manager
    ->getFieldStorageDefinition('category', 'druki_content');
  if ($category_field) {
    // Uninstall "category" base field.
    $definition_update_manager->uninstallFieldStorageDefinition($category_field);

    // Install "category" field.
    // Install storage.
    $entity_type_manager
      ->getStorage('field_storage_config')
      ->create($storage->read('field.storage.druki_content.category'))
      ->save();
    // Install field.
    $entity_type_manager
      ->getStorage('field_config')
      ->create($storage->read('field.field.druki_content.druki_content.category'))
      ->save();
  }

  return t('Both base fields moved into configs.');
}
