diff --git a/CHANGELOG.md b/CHANGELOG.md
index 28e8172..eef8d02 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,21 +4,13 @@
 
 ### Base theme
 
-### Starter theme
-
-## [1.0-alpha15]
-
-### Base theme
-
 - Improved menu BEM generation and markup.
 - Improved region BEM generation and markup.
 - Removed `area-labeledby` for breadcrumbs. Because it incorrect. WCAG is not priority now.
-- **Breaking.** They were created for the previous BEM naming. It showed that the forms do not adapt well to this, because they are assembled from many smaller Blocks. For now, the best solution is to use default templates.
 
 ### Starter theme
 
-- Improved line-height for button and form-control.
-- Improved bem modifier generation for view modes in fields.
+No changes.
 
 ## [1.0-alpha14]
 
@@ -306,8 +298,7 @@ Since release of first alpha, now we can use composer to lock theme version, and
 - Added CHANGELOG.md to track all changes.
 - Changed composer.json for the theme to be `drupal-theme` instead of being `drupal-custom-theme`.
 
-[unreleased]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha15...HEAD
-[1.0-alpha15]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha14...8.x-1.0-alpha15
+[unreleased]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha14...HEAD
 [1.0-alpha14]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha13...8.x-1.0-alpha14
 [1.0-alpha13]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha12...8.x-1.0-alpha13
 [1.0-alpha12]: https://github.com/Niklan/Glisseo/compare/8.x-1.0-alpha11...8.x-1.0-alpha12
diff --git a/STARTER/assets/scss/components/ui/_button.scss b/STARTER/assets/scss/components/ui/_button.scss
index 27550df..acb7415 100644
--- a/STARTER/assets/scss/components/ui/_button.scss
+++ b/STARTER/assets/scss/components/ui/_button.scss
@@ -4,7 +4,6 @@
 
 :root {
   --button-font-size: 1em;
-  --button-line-height: var(--form-control-line-height, 1.5);
   --button-padding-y: 0.5em;
   --button-padding-x: 0.75em;
   --button-border-radius: var(--radius);
@@ -15,7 +14,7 @@
 
 .button {
   font-size: var(--button-font-size);
-  line-height: var(--button-line-height);
+  line-height: 1;
   position: relative;
   display: inline-flex;
   align-items: center;
diff --git a/STARTER/assets/scss/components/ui/_form.scss b/STARTER/assets/scss/components/ui/_form.scss
index f87b643..a9e0792 100644
--- a/STARTER/assets/scss/components/ui/_form.scss
+++ b/STARTER/assets/scss/components/ui/_form.scss
@@ -78,7 +78,6 @@
   --form-control-background: var(--color-white);
   --form-control-color: var(--text-color);
   --form-control-font-size: 1em;
-  --form-control-line-height: 1.5;
   --form-control-padding-y: 0.5em;
   --form-control-padding-x: 0.75em;
   --form-control-border-radius: var(--radius);
@@ -87,7 +86,7 @@
 
 .form-control {
   font-size: var(--form-control-font-size);
-  line-height: var(--form-control-line-height);
+  line-height: inherit;
   display: block;
   width: 100%;
   max-width: 100%;
diff --git a/STARTER/assets/scss/elements/_blockquotes.scss b/STARTER/assets/scss/elements/_blockquotes.scss
index 8148945..4984e7f 100644
--- a/STARTER/assets/scss/elements/_blockquotes.scss
+++ b/STARTER/assets/scss/elements/_blockquotes.scss
@@ -8,7 +8,7 @@
   --blockquote-paddings: var(--spacing-unit);
   --blockquote-margins: var(--spacing-sm) 0;
   --blockquote-background: transparent;
-  --blockquote-border-color: var(--color-gray-40);
+  --blockquote-border-color: #{gray(400)};
 }
 
 blockquote {
diff --git a/STARTER/assets/scss/elements/_typography.scss b/STARTER/assets/scss/elements/_typography.scss
index d5bd097..e5c2803 100644
--- a/STARTER/assets/scss/elements/_typography.scss
+++ b/STARTER/assets/scss/elements/_typography.scss
@@ -4,14 +4,14 @@
 
 :root {
   // Text sizes.
-  --text-base-size: 16px;
-  --text-xxs: 13px;
-  --text-xs: 14px;
-  --text-sm: 15px;
-  --text-md: 18px;
-  --text-lg: 24px;
-  --text-xl: 28px;
-  --text-xxl: 32px;
+  --text-base-size: 1em;
+  --text-scale-ratio: 1.2;
+  --text-xs: calc((var(--text-base-size) / var(--text-scale-ratio)) / var(--text-scale-ratio));
+  --text-sm: calc(var(--text-xs) * var(--text-scale-ratio));
+  --text-md: calc(var(--text-sm) * var(--text-scale-ratio));
+  --text-lg: calc(var(--text-md) * var(--text-scale-ratio));
+  --text-xl: calc(var(--text-lg) * var(--text-scale-ratio));
+  --text-xxl: calc(var(--text-xl) * var(--text-scale-ratio));
 
   --text-color: hsl(0, 0%, 7%);
 
@@ -23,8 +23,6 @@
 
   --mark-background: hsl(60, 100%, 50%);
   --code-background: var(--page-background);
-
-  --p-margin-bottom: var(--spacing-sm);
 }
 
 body {
@@ -36,7 +34,7 @@ body {
 
 p {
   margin-top: unset;
-  margin-bottom: var(--p-margin-bottom);
+  margin-bottom: var(--spacing-sm);
 }
 
 small {
diff --git a/STARTER/templates/page/page.html.twig b/STARTER/templates/page/page.html.twig
index 854a6ab..6e61fc2 100644
--- a/STARTER/templates/page/page.html.twig
+++ b/STARTER/templates/page/page.html.twig
@@ -1,9 +1,17 @@
-{{ page.header }}
+{% set bem_block = 'app' %}
+<div class="{{ bem_block }}">
+  <div class="{{ bem_block }}__header">
+    {{ page.header }}
+    {{ page.navigation }}
+  </div>
 
-<main{{ main_layout_attributes }}>
-  {{ page.sidebar_first }}
-  {{ page.content }}
-  {{ page.sidebar_second }}
-</main>
+  <main{{ main_layout_attributes.addClass(bem_block ~ '__content') }}>
+    {{ page.sidebar_first }}
+    {{ page.content }}
+    {{ page.sidebar_second }}
+  </main>
 
-{{ page.footer }}
+  <div class="{{ bem_block }}__footer">
+    {{ page.footer }}
+  </div>
+</div>
diff --git a/glisseo.theme b/glisseo.theme
index a7c26dc..b297a70 100644
--- a/glisseo.theme
+++ b/glisseo.theme
@@ -149,15 +149,6 @@ function glisseo_theme_suggestions_block_alter(array &$suggestions, $variables,
   }
 }
 
-/**
- * Implements hook_preprocess_HOOK() for 'comment.html.twig'.
- */
-function glisseo_preprocess_comment(array &$variables) {
-  /** @var \Drupal\comment\CommentInterface $comment */
-  $comment = $variables['elements']['#comment'];
-  $variables['bem_block'] = _glisseo_get_bem_block_for_entity($comment, $variables['elements']['#view_mode']);
-}
-
 /**
  * Implements hook_theme_suggestions_HOOK_alter().
  *
@@ -220,7 +211,7 @@ function glisseo_preprocess_field(&$variables) {
   ];
   $variables['bem_block'] = Html::getClass(implode('-', $bem_block_pieces));
   if ($variables['view_mode'] != 'default') {
-    $variables['bem_modifiers'][] = Html::getClass($variables['view_mode']);
+    $variables['bem_modifiers'][] = $variables['view_mode'];
   }
 }
 
diff --git a/templates/field/field--comment.html.twig b/templates/field/field--comment.html.twig
index 4181ccc..b462b12 100644
--- a/templates/field/field--comment.html.twig
+++ b/templates/field/field--comment.html.twig
@@ -1,7 +1,7 @@
 {%
   set bem_classes = bem_classes|merge([
-  label_display == 'inline' ? bem_block ~ '--label-inline',
-])
+    label_display == 'inline' ? bem_block ~ '--label-inline',
+  ])
 %}
 {%
   set title_classes = [
@@ -10,20 +10,20 @@
 ]
 %}
 <a id="comments"></a>
-<section{{ attributes.addClass(bem_classes) }}>
+<section{{ attributes.addClass(classes) }}>
   {% if comments and not label_hidden %}
     {{ title_prefix }}
-    <h2{{ title_attributes.addClass(bem_block ~ '__title') }}>{{ label|t }}</h2>
+    <h2{{ title_attributes.addClass(bem_element_prefix ~ 'title') }}>{{ label|t }}</h2>
     {{ title_suffix }}
   {% endif %}
 
-  <div class="{{ bem_block }}__content">
+  <div class="{{ bem_element_prefix }}content">
     {{ comments }}
   </div>
 
   {% if comment_form %}
-    <div class="{{ bem_block }}__form-container">
-      <h2{{ content_attributes.addClass(bem_block ~ '__form-title') }}>{{ 'Add new comment'|t }}</h2>
+    <div class="{{ bem_element_prefix }}form-container">
+      <h2{{ content_attributes.addClass(bem_element_prefix ~ 'form-title') }}>{{ 'Add new comment'|t }}</h2>
       {{ comment_form }}
     </div>
   {% endif %}
diff --git a/templates/form/container.html.twig b/templates/form/container.html.twig
new file mode 100644
index 0000000..76d74ea
--- /dev/null
+++ b/templates/form/container.html.twig
@@ -0,0 +1,26 @@
+{#
+/**
+ * @file
+ * Theme override of a container used to wrap child elements.
+ *
+ * Used for grouped form items. Can also be used as a theme wrapper for any
+ * renderable element, to surround it with a <div> and HTML attributes.
+ * See \Drupal\Core\Render\Element\RenderElement for more
+ * information on the #theme_wrappers render array property, and
+ * \Drupal\Core\Render\Element\container for usage of the container render
+ * element.
+ *
+ * Available variables:
+ * - attributes: HTML attributes for the containing element.
+ * - children: The rendered child elements of the container.
+ * - has_parent: A flag to indicate that the container has one or more parent
+     containers.
+ *
+ * @see template_preprocess_container()
+ */
+#}
+{% set classes = [
+  has_parent ? 'js-form-wrapper',
+  has_parent ? 'form-container',
+] %}
+<div{{ attributes.addClass(classes) }}>{{ children }}</div>
diff --git a/templates/form/datetime-form.html.twig b/templates/form/datetime-form.html.twig
new file mode 100644
index 0000000..0ee7f20
--- /dev/null
+++ b/templates/form/datetime-form.html.twig
@@ -0,0 +1,3 @@
+<div{{ attributes.addClass('container-inline') }}>
+  {{ content }}
+</div>
diff --git a/templates/form/datetime-wrapper.html.twig b/templates/form/datetime-wrapper.html.twig
new file mode 100644
index 0000000..5112195
--- /dev/null
+++ b/templates/form/datetime-wrapper.html.twig
@@ -0,0 +1,17 @@
+{% set title_classes = [
+  'form-item__label',
+  required ? 'js-form-required',
+  required ? 'form-required',
+] %}
+{% if title %}
+  <label{{ title_attributes.addClass(title_classes) }}>{{ title }}</label>
+{% endif %}
+{{ content }}
+{% if errors %}
+  <div class="form-item__errors">
+    {{ errors }}
+  </div>
+{% endif %}
+{% if description %}
+  <div class="form-item__description">{{ description }}</div>
+{% endif %}
diff --git a/templates/form/details.html.twig b/templates/form/details.html.twig
new file mode 100644
index 0000000..4b085f8
--- /dev/null
+++ b/templates/form/details.html.twig
@@ -0,0 +1,27 @@
+{% set bem_block = form_id ? ('form-' ~ form_id|clean_class ~ '__' ~ name)|clean_class : 'details' %}
+{% set classes = [
+  bem_block,
+] %}
+<details{{ attributes.addClass(classes) }}>
+  {% set bem_element_summary = bem_block ~ '-summary' %}
+  {% set summary_classes = [
+    bem_element_summary,
+    required ? 'js-form-required',
+    required ? bem_element_summary ~ '--required',
+  ] %}
+  {%- if title -%}
+    <summary{{ summary_attributes.addClass(summary_classes) }}>{{ title }}</summary>
+  {%- endif -%}
+
+  {% if errors %}
+    <div class="{{ bem_block }}-errors">
+      {{ errors }}
+    </div>
+  {% endif %}
+
+  <div class="{{ bem_block }}-content">
+    {{ description }}
+    {{ children }}
+    {{ value }}
+  </div>
+</details>
diff --git a/templates/form/fieldset.html.twig b/templates/form/fieldset.html.twig
new file mode 100644
index 0000000..dcf937f
--- /dev/null
+++ b/templates/form/fieldset.html.twig
@@ -0,0 +1,36 @@
+{# @todo improve BEM markup. #}
+{% set classes = [
+  'js-form-item',
+  'form-item',
+  'js-form-wrapper',
+  'form-wrapper',
+  'fieldset',
+] %}
+<fieldset{{ attributes.addClass(classes) }}>
+  {% set legend_span_classes = [
+    'fieldset__legend',
+    required ? 'js-form-required',
+    required ? 'form-required',
+  ] %}
+  {#  Always wrap fieldset legends in a SPAN for CSS positioning. #}
+  <legend{{ legend.attributes }}>
+    <span{{ legend_span.attributes.addClass(legend_span_classes) }}>{{ legend.title }}</span>
+  </legend>
+  <div class="fieldset__wrapper">
+    {% if errors %}
+      <div>
+        {{ errors }}
+      </div>
+    {% endif %}
+    {% if prefix %}
+      <span class="field-prefix">{{ prefix }}</span>
+    {% endif %}
+    {{ children }}
+    {% if suffix %}
+      <span class="field-suffix">{{ suffix }}</span>
+    {% endif %}
+    {% if description.content %}
+      <div{{ description.attributes.addClass('fieldset__description') }}>{{ description.content }}</div>
+    {% endif %}
+  </div>
+</fieldset>
diff --git a/templates/form/form-element-label.html.twig b/templates/form/form-element-label.html.twig
new file mode 100644
index 0000000..e6b876d
--- /dev/null
+++ b/templates/form/form-element-label.html.twig
@@ -0,0 +1,10 @@
+{% set classes = [
+  'form-item__label',
+  title_display == 'after' ? 'option',
+  title_display == 'invisible' ? 'visually-hidden',
+  required ? 'js-form-required',
+  required ? 'form-item__label--required',
+] %}
+{% if title is not empty or required -%}
+  <label{{ attributes.addClass(classes) }}>{{ title }}</label>
+{%- endif %}
diff --git a/templates/form/form-element.html.twig b/templates/form/form-element.html.twig
new file mode 100644
index 0000000..d302808
--- /dev/null
+++ b/templates/form/form-element.html.twig
@@ -0,0 +1,46 @@
+{% set classes = [
+  form_id ? 'form-' ~ form_id|clean_class ~ '__' ~ name|clean_class,
+  'js-form-item',
+  'js-form-type-' ~ type|clean_class,
+  'js-form-item-' ~ name|clean_class,
+  'form-item',
+  'form-item-' ~ name|clean_class,
+  'form-type-' ~ type|clean_class,
+  title_display not in ['after', 'before'] ? 'form-item--no-label',
+  disabled == 'disabled' ? 'form-item--disabled',
+  errors ? 'form-item--error',
+] %}
+{% set description_classes = [
+  'form-item__description',
+  description_display == 'invisible' ? 'visually-hidden',
+] %}
+<div{{ attributes.addClass(classes) }}>
+  {% if label_display in ['before', 'invisible'] %}
+    {{ label }}
+  {% endif %}
+  {% if prefix is not empty %}
+    <span class="field-prefix">{{ prefix }}</span>
+  {% endif %}
+  {% if description_display == 'before' and description.content %}
+    <div{{ description.attributes }}>
+      {{ description.content }}
+    </div>
+  {% endif %}
+  {{ children }}
+  {% if suffix is not empty %}
+    <span class="field-suffix">{{ suffix }}</span>
+  {% endif %}
+  {% if label_display == 'after' %}
+    {{ label }}
+  {% endif %}
+  {% if errors %}
+    <div class="form-item__error-message">
+      {{ errors }}
+    </div>
+  {% endif %}
+  {% if description_display in ['after', 'invisible'] and description.content %}
+    <div{{ description.attributes.addClass(description_classes) }}>
+      {{ description.content }}
+    </div>
+  {% endif %}
+</div>
diff --git a/templates/form/form.html.twig b/templates/form/form.html.twig
new file mode 100644
index 0000000..8516da0
--- /dev/null
+++ b/templates/form/form.html.twig
@@ -0,0 +1,17 @@
+{% set bem_block = 'form' %}
+{% set classes = [
+  bem_block,
+] %}
+{%
+  set classes = [
+    bem_block,
+  ]
+%}
+{% for bem_modifier in bem_modifiers %}
+  {% if bem_modifier|length %}
+    {% set classes = classes|merge([bem_block ~ '--' ~ bem_modifier|clean_class]) %}
+  {% endif %}
+{% endfor %}
+<form{{ attributes.addClass(classes) }}>
+  {{ children }}
+</form>
diff --git a/templates/form/input.html.twig b/templates/form/input.html.twig
new file mode 100644
index 0000000..1ec40ed
--- /dev/null
+++ b/templates/form/input.html.twig
@@ -0,0 +1,13 @@
+{#
+/**
+ * @file
+ * Theme override for an 'input' #type form element.
+ *
+ * Available variables:
+ * - attributes: A list of HTML attributes for the input element.
+ * - children: Optional additional rendered elements.
+ *
+ * @see template_preprocess_input()
+ */
+#}
+<input{{ attributes.addClass('form-item__input') }} />{{ children }}
